/**
 * 4-bit CLA.
 * Author: Naga Kandasamy
 * Date created: June 29, 2020
 * Date modified: September 12, 2021
 * 
 * Student name(s): Noah Robinson
 * Date modified: 6/30/23
 */

CHIP CLA4 {
    IN x[4], y[4], cin;     // 4-bit inputs
    OUT z[4], cout;         // 4-bit output, 1 carry out bit

    PARTS: 
    // FIXME: provide your solution
    
    // Generate G and P  
    // 0
    And(a=x[0], b=y[0], out=G0);
    Or(a=x[0], b=y[0], out=P0);
    // 1
    And(a=x[1], b=y[1], out=G1);
    Or(a=x[1], b=y[1], out=P1);
    // 2
    And(a=x[2], b=y[2], out=G2);
    Or(a=x[2], b=y[2], out=P2);
    // 3
    And(a=x[3], b=y[3], out=G3);
    Or(a=x[3], b=y[3], out=P3);

    // C0
    And(a=P0, b=cin, out=C0temp1);
    Or(a=G0, b=C0temp1, out=C0);
    // C1
    And(a=P1, b=P0, out=C1temp1);
    And(a=C1temp1, b=cin, out=C1temp2);

    And(a=P1, b=G0, out=C1temp3);

    Or(a=C1temp2, b=C1temp3, out=C1temp4);
    Or(a=C1temp4, b=G1, out=C1);
    // C2
    And(a=P1, b=P0, out=C2temp1);
    And(a=C2temp1, b=P2, out=C2temp2);
    And(a=C2temp2, b=cin, out=C2temp3);

    And(a=P2, b=P1, out=C2temp4);
    And(a=C2temp4, b=G0, out=C2temp5);

    And(a=P2, b=G1, out=C2temp6);
    
    Or(a=C2temp3, b=C2temp5, out=C2temp7);
    Or(a=C2temp7, b=C2temp6, out=C2temp8);
    Or(a=C2temp8, b=G2, out=C2);
    
    // C3
    And(a=P1, b=P0, out=C3temp1);
    And(a=C3temp1, b=P2, out=C3temp2);
    And(a=C3temp2, b=P3, out=C3temp3);
    And(a=C3temp3, b=cin, out=C3temp4);

    And(a=P2, b=P1, out=C3temp5);
    And(a=C3temp5, b=P3, out=C3temp6);
    And(a=C3temp6, b=G0, out=C3temp7);

    And(a=P2, b=G1, out=C3temp8);
    And(a=C3temp8, b=P3, out=C3temp9);

    And(a=P3, b=G2, out=C3temp10);
    
    Or(a=C3temp4, b=C3temp7, out=C3temp11);
    Or(a=C3temp11, b=C3temp9, out=C3temp12);
    Or(a=C3temp12, b=C3temp10, out=C3temp13);
    Or(a=C3temp13, b=G3, out=cout);

    // FA0
    Xor(a=x[0], b=y[0], out=FA0temp1);
    Xor(a=FA0temp1, b=cin, out=z[0]);

    // FA1
    Xor(a=x[1], b=y[1], out=FA1temp1);
    Xor(a=FA1temp1, b=C0, out=z[1]);

    // FA2
    Xor(a=x[2], b=y[2], out=FA2temp1);
    Xor(a=FA2temp1, b=C1, out=z[2]);

    // FA3
    Xor(a=x[3], b=y[3], out=FA3temp1);
    Xor(a=FA3temp1, b=C2, out=z[3]);
}